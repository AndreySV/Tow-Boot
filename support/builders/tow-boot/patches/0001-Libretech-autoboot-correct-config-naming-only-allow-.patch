From f8f4df9f36cb339dcf698ba32f3f37a3291cd8de Mon Sep 17 00:00:00 2001
From: Da Xue <da@libre.computer>
Date: Tue, 7 Jul 2020 22:23:48 -0400
Subject: [PATCH] [Libretech] autoboot: correct config naming, only allow
 escape key to menu

Origin: https://github.com/libre-computer-project/libretech-u-boot/commit/e8dc057670e9ff0e8ecfea4fd549ce8cc2516378
---
 common/autoboot.c | 50 ++++++++++++++++++++++++++++++++---------------
 1 file changed, 34 insertions(+), 16 deletions(-)

diff --git a/common/autoboot.c b/common/autoboot.c
index a98d920db5..cad542ac7a 100644
--- a/common/autoboot.c
+++ b/common/autoboot.c
@@ -46,8 +46,12 @@ static int menukey;
 #define AUTOBOOT_STOP_STR_SHA256 ""
 #endif
 
-#ifdef CONFIG_USE_AUTOBOOT_MENUKEY
-#define AUTOBOOT_MENUKEY CONFIG_USE_AUTOBOOT_MENUKEY
+#ifdef CONFIG_AUTOBOOT_USE_MENUKEY
+#ifdef CONFIG_AUTOBOOT_MENUKEY
+#define AUTOBOOT_MENUKEY CONFIG_AUTOBOOT_MENUKEY
+#else
+#define AUTOBOOT_MENUKEY 0
+#endif
 #else
 #define AUTOBOOT_MENUKEY 0
 #endif
@@ -286,11 +290,22 @@ static int abortboot_single_key(int bootdelay)
 	 * Check if key already pressed
 	 */
 	if (tstc()) {	/* we got a key press	*/
-		getchar();	/* consume input	*/
-		puts(ANSI_CLEAR_LINE);
-		printf(ANSI_CURSOR_COLUMN, 1);
-		printf(CONFIG_AUTOBOOT_PROMPT, 0);
-		abort = 1;	/* don't auto boot	*/
+		if (IS_ENABLED(CONFIG_AUTOBOOT_USE_MENUKEY)){
+			menukey = getchar();
+			puts(ANSI_CLEAR_LINE);
+			printf(ANSI_CURSOR_COLUMN, 1);
+			printf(CONFIG_AUTOBOOT_PROMPT, 0);
+			if (menukey == AUTOBOOT_MENUKEY) {
+				abort = 1;
+				bootdelay = 0;
+			}
+		} else {
+			(void) getchar();  /* consume input */
+			puts(ANSI_CLEAR_LINE);
+			printf(ANSI_CURSOR_COLUMN, 1);
+			printf(CONFIG_AUTOBOOT_PROMPT, 0);
+			abort = 1;	/* don't auto boot	*/
+		}
 	}
 
 	while ((bootdelay > 0) && (!abort)) {
@@ -299,13 +314,17 @@ static int abortboot_single_key(int bootdelay)
 		ts = get_timer(0);
 		do {
 			if (tstc()) {	/* we got a key press	*/
-				int key;
-
-				abort  = 1;	/* don't auto boot	*/
-				bootdelay = 0;	/* no more delay	*/
-				key = getchar();/* consume input	*/
-				if (IS_ENABLED(CONFIG_USE_AUTOBOOT_MENUKEY))
-					menukey = key;
+				if (IS_ENABLED(CONFIG_AUTOBOOT_USE_MENUKEY)){
+					menukey = getchar();
+					if (menukey == AUTOBOOT_MENUKEY){
+						abort = 1;
+						bootdelay = 0;
+					}
+				} else {
+					abort  = 1;	/* don't auto boot	*/
+					bootdelay = 0;	/* no more delay	*/
+					menukey = getchar(); /* consume input	*/	
+				}
 				break;
 			}
 			udelay(10000);
@@ -412,8 +431,7 @@ void autoboot_command(const char *s)
 			disable_ctrlc(prev);	/* restore Ctrl-C checking */
 	}
 
-	if (IS_ENABLED(CONFIG_USE_AUTOBOOT_MENUKEY) &&
-	    menukey == AUTOBOOT_MENUKEY) {
+	if (IS_ENABLED(CONFIG_AUTOBOOT_USE_MENUKEY)) {
 		s = env_get("menucmd");
 		if (s)
 			run_command_list(s, -1, 0);
-- 
2.29.2

