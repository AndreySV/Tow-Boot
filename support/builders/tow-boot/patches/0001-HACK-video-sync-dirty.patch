From 55de0c383fc499447f68b08775d2e10650296bb3 Mon Sep 17 00:00:00 2001
From: Samuel Dionne-Riel <samuel@dionne-riel.com>
Date: Sat, 8 May 2021 20:20:39 -0400
Subject: [PATCH 1/2] [HACK] video: Add video_sync_dirty

This is used to work around the slow redraw of a full video console
display.

The `video_sync_dirty` function is *supposed* to be called in situations
where it makes sense for a dynamic user use case. The easiest example
would be in the sibling patch, where it is applied to `tstc` and `getc`
methods of graphical input methods.

This is not supposed to go upstream. This is a workaround for the issue,
which would be better fixed with some kind of co-operative "multi"
tasking, where instead the video-uclass would add a task to sync
"whenever the system can" (if not asked for already).
---
 drivers/video/video-uclass.c | 23 +++++++++++++++++++----
 include/video.h              |  7 +++++++
 2 files changed, 26 insertions(+), 4 deletions(-)

diff --git a/drivers/video/video-uclass.c b/drivers/video/video-uclass.c
index 96ec6f80af..da80a1163e 100644
--- a/drivers/video/video-uclass.c
+++ b/drivers/video/video-uclass.c
@@ -61,6 +61,8 @@ struct video_uc_priv {
 	ulong video_ptr;
 };
 
+static bool video_is_dirty = false;
+
 void video_set_flush_dcache(struct udevice *dev, bool flush)
 {
 	struct video_priv *priv = dev_get_uclass_priv(dev);
@@ -192,11 +194,17 @@ int video_sync(struct udevice *vid, bool force)
 	 */
 #if defined(CONFIG_ARM) && !CONFIG_IS_ENABLED(SYS_DCACHE_OFF)
 	struct video_priv *priv = dev_get_uclass_priv(vid);
+	static ulong last_sync;
 
-	if (priv->flush_dcache) {
-		flush_dcache_range((ulong)priv->fb,
-				   ALIGN((ulong)priv->fb + priv->fb_size,
-					 CONFIG_SYS_CACHELINE_SIZE));
+	video_is_dirty = true;
+	if (force || get_timer(last_sync) > 10) {
+		if (priv->flush_dcache) {
+			flush_dcache_range((ulong)priv->fb,
+					   ALIGN((ulong)priv->fb + priv->fb_size,
+						 CONFIG_SYS_CACHELINE_SIZE));
+		}
+		video_is_dirty = false;
+		last_sync = get_timer(0);
 	}
 #elif defined(CONFIG_VIDEO_SANDBOX_SDL)
 	struct video_priv *priv = dev_get_uclass_priv(vid);
@@ -226,6 +234,13 @@ void video_sync_all(void)
 	}
 }
 
+void video_sync_dirty(void)
+{
+	if (video_is_dirty) {
+		video_sync_all();
+	}
+}
+
 int video_get_xsize(struct udevice *dev)
 {
 	struct video_priv *priv = dev_get_uclass_priv(dev);
diff --git a/include/video.h b/include/video.h
index 827733305e..402e3d90a3 100644
--- a/include/video.h
+++ b/include/video.h
@@ -178,6 +178,13 @@ int video_sync(struct udevice *vid, bool force);
  */
 void video_sync_all(void);
 
+/**
+ * video_sync_dirty() - Sync all devices' frame buffers when dirty
+ *
+ * This calls video_sync_all() if needed.
+ */
+void video_sync_dirty(void);
+
 /**
  * video_bmp_display() - Display a BMP file
  *
-- 
2.29.2


From bfca76dc55321ceace0dccf59bbba806e4cdbbab Mon Sep 17 00:00:00 2001
From: Samuel Dionne-Riel <samuel@dionne-riel.com>
Date: Sat, 8 May 2021 20:35:53 -0400
Subject: [PATCH 2/2] [HACK] input: sync video on user input request

This "finishes" trailing, or hanging, video updates that might not have
been synced yet. See the previous sibling commit.
---
 common/usb_kbd.c                | 11 +++++++++++
 drivers/input/keyboard-uclass.c | 11 +++++++++++
 2 files changed, 22 insertions(+)

diff --git a/common/usb_kbd.c b/common/usb_kbd.c
index afad260d3d..dedac3cf6e 100644
--- a/common/usb_kbd.c
+++ b/common/usb_kbd.c
@@ -17,6 +17,7 @@
 #include <stdio_dev.h>
 #include <watchdog.h>
 #include <asm/byteorder.h>
+#include <video.h>
 
 #include <usb.h>
 
@@ -394,6 +395,11 @@ static int usb_kbd_testc(struct stdio_dev *sdev)
 	struct usb_device *usb_kbd_dev;
 	struct usb_kbd_pdata *data;
 
+#ifdef CONFIG_DM_VIDEO
+	// For "fast console"
+	video_sync_dirty();
+#endif
+
 #ifdef CONFIG_CMD_NET
 	/*
 	 * If net_busy_flag is 1, NET transfer is running,
@@ -420,6 +426,11 @@ static int usb_kbd_getc(struct stdio_dev *sdev)
 	struct usb_device *usb_kbd_dev;
 	struct usb_kbd_pdata *data;
 
+#ifdef CONFIG_DM_VIDEO
+	// For "fast console"
+	video_sync_dirty();
+#endif
+
 	dev = stdio_get_by_name(sdev->name);
 	usb_kbd_dev = (struct usb_device *)dev->priv;
 	data = usb_kbd_dev->privptr;
diff --git a/drivers/input/keyboard-uclass.c b/drivers/input/keyboard-uclass.c
index 2c6680337d..6895939f26 100644
--- a/drivers/input/keyboard-uclass.c
+++ b/drivers/input/keyboard-uclass.c
@@ -7,6 +7,7 @@
 #include <dm.h>
 #include <keyboard.h>
 #include <log.h>
+#include <video.h>
 
 static int keyboard_start(struct stdio_dev *sdev)
 {
@@ -36,6 +37,11 @@ static int keyboard_tstc(struct stdio_dev *sdev)
 	struct keyboard_priv *priv = dev_get_uclass_priv(dev);
 	struct keyboard_ops *ops = keyboard_get_ops(dev);
 
+#ifdef CONFIG_DM_VIDEO
+	// For "fast console"
+	video_sync_dirty();
+#endif
+
 	/* Just get input to do this for us if we can */
 	if (priv->input.dev)
 		return input_tstc(&priv->input);
@@ -51,6 +57,11 @@ static int keyboard_getc(struct stdio_dev *sdev)
 	struct keyboard_priv *priv = dev_get_uclass_priv(dev);
 	struct keyboard_ops *ops = keyboard_get_ops(dev);
 
+#ifdef CONFIG_DM_VIDEO
+	// For "fast console"
+	video_sync_dirty();
+#endif
+
 	/* Just get input to do this for us if we can */
 	if (priv->input.dev)
 		return input_getc(&priv->input);
-- 
2.29.2

